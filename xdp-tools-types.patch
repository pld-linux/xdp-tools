--- xdp-tools-1.2.4/lib/util/stats.c.orig	2022-06-28 20:21:15.000000000 +0200
+++ xdp-tools-1.2.4/lib/util/stats.c	2022-07-03 09:34:37.393386875 +0200
@@ -107,8 +107,8 @@ int stats_print(struct stats_record *sta
 			return 0;
 
 		if (first) {
-			printf("Period of %fs ending at %lu.%06lu\n", period,
-			       t.tv_sec, t.tv_nsec / 1000);
+			printf("Period of %fs ending at %llu.%06llu\n", period,
+			       (unsigned long long)t.tv_sec, (unsigned long long)(t.tv_nsec / 1000));
 			first = false;
 		}
 
--- xdp-tools-1.2.4/xdp-dump/xdpdump.c.orig	2022-06-28 20:21:15.000000000 +0200
+++ xdp-tools-1.2.4/xdp-dump/xdpdump.c	2022-07-03 09:35:58.851004482 +0200
@@ -644,9 +644,9 @@ static bool capture_on_legacy_interface(
 			char hline[SNPRINTH_MIN_BUFFER_SIZE];
 
 			if (cfg->hex_dump) {
-				printf("%lu.%06lu: packet size %u bytes, "
+				printf("%llu.%06llu: packet size %u bytes, "
 				       "captured %u bytes on if_name \"%s\"\n",
-				       h.ts.tv_sec, h.ts.tv_usec,
+				       (unsigned long long)h.ts.tv_sec, (unsigned long long)h.ts.tv_usec,
 				       h.len, h.caplen, cfg->iface.ifname);
 
 				for (i = 0; i < h.caplen; i += 16) {
@@ -655,9 +655,9 @@ static bool capture_on_legacy_interface(
 					printf("  %s\n", hline);
 				}
 			} else {
-				printf("%lu.%06lu: packet size %u bytes on "
+				printf("%llu.%06llu: packet size %u bytes on "
 				       "if_name \"%s\"\n",
-				       h.ts.tv_sec, h.ts.tv_usec,
+				       (unsigned long long)h.ts.tv_sec, (unsigned long long)h.ts.tv_usec,
 				       h.len, cfg->iface.ifname);
 			}
 		}
